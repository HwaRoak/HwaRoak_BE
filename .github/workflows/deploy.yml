name: Deploy to Amazon EC2 with Docker

on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Check Image
      - name: Detect running container and set IMAGE_TAG
        id: detect
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > id_rsa
          chmod 600 id_rsa

          IMAGE_TAG=$(ssh -o StrictHostKeyChecking=no -i id_rsa ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} \
            'if docker ps --filter "name=app-blue" --format "{{.Names}}" | grep -q app-blue; then echo green; else echo blue; fi')

          echo "IMAGE_TAG=$IMAGE_TAG"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Create .env file from secret
        run: echo "${{ secrets.ENV_FILE_CONTENTS }}" > .env

      - name: Build with Gradle (skip tests)
        run: |
          chmod +x ./gradlew
          ./gradlew clean
          ./gradlew build -x test

      # Docker login
      - name: Docker Login to GHCR
        run: echo ${{ secrets.YOUYEON_GITHUB_PAT }} | docker login ghcr.io -u ${{ secrets.YOUYEON_GITHUB_USERNAME }} --password-stdin

      # Image Build and Push
      - name: Build and Push Docker Image
        run: |
          docker build -t ghcr.io/${{ secrets.ORG_NAME }}/hwaroak-api:${{ env.IMAGE_TAG }} .
          docker push ghcr.io/${{ secrets.ORG_NAME }}/hwaroak-api:${{ env.IMAGE_TAG }}

  transfer:
    name: Transfer
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Transfer docker-compose.yml file to ec2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ./docker-compose.yml,./deploy.sh
          target: /home/ubuntu/hwaroak-api/

      - name: Transfer nginx directory file to ec2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ./nginx/
          target: /home/ubuntu/

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: transfer
    steps:
      - name: SSH into EC2 server and Deploy
        uses: appleboy/ssh-action@v1
        env:
          SERVER_DNS : ${{ secrets.SERVER_DNS }}
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # 1. cd ~/hwaroak-api
            mkdir -p ~/hwaroak-api
            cd ~/hwaroak-api
            
            # 2. .env 작성
            echo "${{ secrets.ENV_FILE_CONTENTS }}" > .env
            
            # 3. GHCR 로그인
            echo "${{ secrets.YOUYEON_GITHUB_PAT }}" | docker login ghcr.io -u ${{ secrets.YOUYEON_GITHUB_USERNAME }} --password-stdin
            
            # 4. pull image:latest
            docker pull ghcr.io/${{ secrets.ORG_NAME }}/hwaroak-api:${{ env.IMAGE_TAG }}
            
            # 5. 환경변수 설정
            export ORG_NAME=${{ secrets.ORG_NAME }}
            
            # 6. 스크립트 실행
            chmod +x deploy.sh
            source deploy.sh
